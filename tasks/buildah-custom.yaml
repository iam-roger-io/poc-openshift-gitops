apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:    
    tekton.dev/categories: Image Build
    tekton.dev/pipelines.minVersion: 0.17.0
    tekton.dev/platforms: 'linux/amd64,linux/s390x,linux/ppc64le,linux/arm64'
    tekton.dev/tags: image-build  
  name: buildah-custom
  labels:
    app.kubernetes.io/version: '0.4'
spec:
  description: >-
    Buildah task builds source into a container image and then pushes it to a
    container registry.

    Buildah Task builds source into a container image using Project Atomic's
    Buildah build tool.It uses Buildah's support for building from Dockerfiles,
    using its buildah bud command.This command executes the directives in the
    Dockerfile to assemble a container image, then pushes that image to a
    container registry.
  params:
    - description: Reference of the image buildah will produce.
      name: IMAGE
      type: string
    - default: 'quay.io/buildah/stable:v1.23.3'
      description: The location of the buildah builder image.
      name: BUILDER_IMAGE
      type: string
    - default: overlay
      description: Set buildah storage driver
      name: STORAGE_DRIVER
      type: string
    - default: ./Dockerfile
      description: Path to the Dockerfile to build.
      name: DOCKERFILE
      type: string
    - default: .
      description: Path to the directory to use as context.
      name: CONTEXT
      type: string
    - default: 'true'
      description: >-
        Verify the TLS on the registry endpoint (for push/pull to a non-TLS
        registry)
      name: TLSVERIFY
      type: string
    - default: oci
      description: 'The format of the built container, oci or docker'
      name: FORMAT
      type: string
    - default: ''
      description: Extra parameters passed for the build command when building images.
      name: BUILD_EXTRA_ARGS
      type: string
    - default: ''
      description: Extra parameters passed for the push command when pushing images.
      name: PUSH_EXTRA_ARGS
      type: string
    - default: 'false'
      description: Skip pushing the built image
      name: SKIP_PUSH
      type: string
  results:
    - description: Digest of the image just built.
      name: IMAGE_DIGEST
    - description: Image repository where the built image would be pushed to
      name: IMAGE_URL
  steps:
    - image: $(params.BUILDER_IMAGE)
      name: build
      resources: {}
      script: >

        echo "### Source code folder:
        /workspace/source/demo-integration-backend/"


        cd /workspace/source/demo-integration-backend


        IMAGE_NAME_FULL=$(params.IMAGE)

        IMAGE_NAME_FULL=$(echo ${IMAGE_NAME_FULL} | tr -dc '[:print:]') 


        buildah --storage-driver=$(params.STORAGE_DRIVER) bud \
          $(params.BUILD_EXTRA_ARGS) --format=$(params.FORMAT) \
          --tls-verify=$(params.TLSVERIFY) --no-cache \
          -f $(params.DOCKERFILE) -t ${IMAGE_NAME_FULL} $(params.CONTEXT)
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
      workingDir: $(workspaces.source.path)
    - image: $(params.BUILDER_IMAGE)
      name: push
      resources: {}
      script: |

        cd /workspace/source/demo-integration-backend

        IMAGE_NAME_FULL=$(params.IMAGE) 
        IMAGE_NAME_FULL=$(echo ${IMAGE_NAME_FULL} | tr -dc '[:print:]') 

         buildah --storage-driver=$(params.STORAGE_DRIVER) push \
           $(params.PUSH_EXTRA_ARGS) --tls-verify=$(params.TLSVERIFY) \
           --digestfile $(workspaces.source.path)/image-digest ${IMAGE_NAME_FULL} \
           docker://${IMAGE_NAME_FULL}
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
      workingDir: $(workspaces.source.path)
    - image: $(params.BUILDER_IMAGE)
      name: digest-to-results
      resources: {}
      script: >-
        cat $(workspaces.source.path)/image-digest | tee
        /tekton/results/IMAGE_DIGEST
  volumes:
    - emptyDir: {}
      name: varlibcontainers
  workspaces:
    - name: source
    - name: sslcertdir
      optional: true
